[phases.setup]
aptPkgs = ["...", "p7zip-full"] # Install the wget package with apt-get
cmds = [
  # Copy .user.ini file to the PHP_INI_DIR
  'PHP_INI_DIR=$(php --ini | grep "Additional .ini files parsed:" | cut -d: -f2 | xargs | xargs dirname); cp ./.user.ini "$PHP_INI_DIR"',
]

[phases.install]
onlyIncludeFiles = [
  "package.json",
  "bun.lock",
  "composer.json",
  "composer.lock",
]

[phases.postbuild]
cmds = [
  "chown -R www-data:www-data storage bootstrap/cache",
  "chmod -R 775 storage bootstrap/cache"
]
dependsOn = ["build"]

[staticAssets]
"start.sh" = '''
#!/bin/bash

# Transform the nginx configuration
node /assets/scripts/prestart.mjs /assets/nginx.template.conf /etc/nginx.conf
'''

"php-fpm.conf" = '''
[www]
listen = 127.0.0.1:9000
user = www-data
group = www-data
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.max_children = 50
pm.min_spare_servers = 4
pm.max_spare_servers = 32
pm.start_servers = 18
clear_env = no
'''

"nginx.template.conf" = '''
user www-data www-data;
worker_processes 5;
daemon off;

worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  # Default: 1024
}

http {
    include    $!{nginx}/conf/mime.types;
    index    index.html index.htm index.php;

    default_type application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;
    error_log  /dev/stdout;

    sendfile     on;
    tcp_nopush   on;
    server_names_hash_bucket_size 128; # this seems to be required for some vhosts

    server {
        listen ${PORT};
        listen [::]:${PORT};
        server_name localhost;

        $if(NIXPACKS_PHP_ROOT_DIR) (
            root ${NIXPACKS_PHP_ROOT_DIR};
        ) else (
            root /app;
        )

        add_header X-Content-Type-Options "nosniff";

        client_max_body_size 35M;

        index index.php;

        charset utf-8;

        $if(IS_LARAVEL) (
            location / {
                try_files $uri $uri/ /index.php?$query_string;
            }
        ) else ()

        # $if(NIXPACKS_PHP_FALLBACK_PATH) (
        #   location / {
        #     try_files $uri $uri/ ${NIXPACKS_PHP_FALLBACK_PATH}?$query_string;
        #   }
        # ) else ()

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        $if(IS_LARAVEL) (
            error_page 404 /index.php;
        ) else ()

        location ~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include $!{nginx}/conf/fastcgi_params;
            include $!{nginx}/conf/fastcgi.conf;

            fastcgi_param PHP_VALUE "upload_max_filesize=30M \n post_max_size=35M";

            # Blok location tambahan untuk file PHP selain index.php
            location ~ ^/(?!index\.php).+\.php$ {
                deny all;
            }
        }

        # Blok location tambahan untuk file HTML
          location ~ \.html$ {
              deny all;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }

        # Blok location tambahan untuk folder
        location ~ ^/(?:[^/]+/)*[^/]+/$ {
          try_files $uri $uri/ =404;

          location ~ \.php$ {
              deny all;
          }
        }
    }
}
'''
